<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- mapper为映射的根节点-->
<!-- mapper为映射的根节点，namespace指定Dao接口的完整类名
mybatis会依据这个接口动态创建一个实现类去实现这个接口，
而这个实现类是一个Mapper对象-->
<mapper namespace="mapper.UserMapper">
    <!--id ="接口中的方法名"
　　parameterType="传入的参数类型"
　　resultType = "返回实体类对象，使用包.类名"-->

    <select id="findAll" resultType="user">
        select * from customer
    </select>

    <select id="findOne" parameterType="int" resultType="User">
        select * from customer where id = #{id}
    </select>

    <insert id="addOne" parameterType="user">
        insert into mybatis.customer(username, jobs, phone)
        VALUES (#{username,jdbcType=VARCHAR}, #{jobs,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR})
    </insert>

    <select id="delOne" parameterType="int" resultType="user">
        delete from customer where id = #{id,jdbcType=INTEGER}
    </select>

    <update id="updateOne" parameterType="user">
        update customer
        set username = #{username,jdbcType=VARCHAR},
            jobs     = #{jobs,jdbcType=VARCHAR},
            phone    =#{phone,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>

